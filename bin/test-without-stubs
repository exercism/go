#!/bin/sh

# This test suite:
# (1) moves all go files (and modules) into a tmp directory,
# (2) overwrites the stub with the exemplar solution
# (3) runs the various linters
# (4) runs the tests
# (5) then deletes the tmp directory.

# We use this instead of build constraints to have less noise in stub files.
# Newcomers to go might be confused by build constraints

# We copy everything into a test directory rather than doing this in the actual
# directories to simplify cleanup and make it far less likely that we will
# accidentally commit an unintended change to the source files.
# One downside to this is that the errors generated reference the temporary
# file locations rather than the real ones, but we deemed this cost acceptable.

tmp=tmp/lint
mkdir -p $tmp

for parentdir in concept practice; do
  for dir in exercises/$parentdir/*/; do
    stub=$(echo $(basename $dir) | tr - _)
    if [ -f "${dir}.meta/.skip_tests" ]; then
      continue
    fi
    file="${dir}${stub}.go"
    exemplar=$(find ${dir}.meta/ex*.go)
    mod="${dir}go.mod"
    if [ ! -f $mod ]; then
      echo "Creating a basic go module at $mod, like this:"
      cat << EOD
module $stub

go 1.14
EOD
      exit 1
    elif [ -f $file ] && [ -f $exemplar ]; then
      tmpstub=$tmp/$parentdir/$stub
      mkdir -p $tmpstub
      echo "copy base files and tests to $tmpstub"
      cp $dir/*.go $tmpstub
      echo "copy exemplar $exemplar to $tmpstub"
      cp $exemplar "${tmpstub}/${stub}.go"
      echo "copy module $mod to $tmpstub"
      cp $mod $tmpstub
      echo "put everything in the same module"
      sed -i "s/package .*/package ${stub}/" $tmpstub/*.go
      sed -i "s/module .*/module ${stub}/" $tmpstub/go.mod
    fi
  done
done

root=$(pwd)

cleanup () {
  echo "deleting ${tmp}"
  # the cd for go fmt or go vet could leave us in an unexpected place.
  # cd to a known place.
  cd "$root"

  rm -rf $tmp
}

trap cleanup EXIT INT TERM

# This is the last command in the file,
# so the exit status of this script is the exit status of go test.
# If this ever changes, remember to preserve the exit status accordingly.
# Otherwise Travis may falsely report a test as passed when it has failed.
# Run lint which is configured by .golangci.yml at the root of the repo
# and if it's successful, run tests
bin/golangci-lint run ./$tmp/... && go test -cpu 2 ./$tmp/...
